.TH PKG\-CACHER 1
.\" NAME should be all caps, SECTION should be 1-8, maybe w/ subsection
.\" other parms are allowed: see man(7), man(1)
.SH NAME
pkg\-cacher \- caching proxy for Debian and RedHat packages
.SH SYNOPSIS
.SS Server:
.B pkg\-cacher 
.I [-i|-d] [-c configfile ] [-p pidfile] [-r directory] [-R retries] [config_option=foo] [-h|--help] 

.SS Client:
.B http://pkg\-cacher.server[/pkg\-cacher]/
.I "[path_map entry] / [distribution]"
.SH "DESCRIPTION"
.B Pkg\-cacher
is a caching proxy for Debian and RedHat packages, allowing a number of computers to share
a single cache. Packages requested from the cache only need to be downloaded
from the Debian or RedHat mirrors once, no matter how many local machines need to install
them. This saves network bandwidth, improves performance for users, and reduces
the load on the mirrors.
.SH COMMAND-LINE OPTIONS
.TP 
.B \-d
Stand-alone daemon-mode. Fork and run in the background
.TP
.B \-i
Inetd daemon-mode: Only use in /etc/inetd.conf
.TP
.B \-c configfile 
Specify alternative configuration file to default [/etc/pkg\-cacher/pkg\-cacher.conf]
.TP
.B \-p pidfile
Write PID of running process to this file.
.TP
.B \-r directory
Experimental option to chroot to given directory
.TP
.B \-R retries
Number of attempts to bind to daemon port.
.TP
.B config_option=value
Override values in configuration file. Can be given multiple times.
.TP
.B \-h, --help
Print brief usage.
.SH USAGE
.PP
Setting up pkg\-cacher involves two stages: installing pkg\-cacher itself on a
single machine on your network to act as a server and configuring all client
machines to use the server's cache.
.PP
Pkg\-cacher can be installed to run either as a daemon [preferred] or as a CGI
script on a web server such as Apache. When a client (apt\-get(1), aptitude(8),
synaptic(8), yum, etc.) requests a package from the cache machine, the request is
handled by pkg\-cacher which checks whether it already has that particular
package. If so, the package is returned immediately to the client for
installation. If not, or if the package in the local cache has been superseded
by a more recent version, the package is fetched from the specified
mirror. While being fetched it is simultaneously streamed to the client, and
also saved to the local cache for future use.
.PP
Other client machines on your network do not need pkg\-cacher installed in order
to use the server cache. The only modification on each client computer is to
direct it to use the server cache. See CLIENT CONFIGURATION below for ways of
doing this.
.SH SERVER INSTALLATION
Pkg\-cacher can be installed in various ways on the server. The recommended way
is by running the program as a daemon. This should give the best performance and
the lowest overall memory usage.

.SH Daemon Mode
.SS Stand-alone Daemon:
Edit the file /etc/default/pkg\-cacher and change AUTOSTART=1, then run (as
root)
.IP
/etc/init.d/pkg\-cacher start
.PP
to start the daemon.
.SS Inetd Daemon:
Edit /etc/inetd.conf and add the line
.IP
80 stream tcp nowait pkg\-cacher /usr/sbin/pkg\-cacher/pkg\-cacher pkg\-cacher \-i
.PP
Restart or send SIGHUP to inetd after saving the file. This is a good method if
you do not wish the daemon to be loaded all the time.
.PP
In either daemon mode, clients can access the server using
.B http://pkg\-cacher.server:port/
.PP
NOTE: in inetd mode access control checks are not performed and the
allowed_hosts and denied_hosts options have no effect. Access controls can be
implemented using using inetd or tcpd wrapper. See README for further
details.
.SH CGI Mode
This is not recommended for long-term use because it brings a visible
performance impact on the network and server speed.  The pkg\-cacher-cgi
package adds a default configuration profile to Apache.  Clients can access the
server using
.B http://pkg\-cacher.server[:port]/pkg\-cacher/.

.SH SERVER CONFIGURATION OPTIONS
Pkg\-cacher uses a configuration file for setting important
options. Additionally there are few command line options to control 
behaviour. See COMMAND-LINE OPTIONS above.
.PP
The default configuration file is
.B /etc/pkg\-cacher/pkg\-cacher.conf.
It is read every time the daemon starts or CGI/inetd slave are
executed. Therefore a stand-alone daemon may need to be restarted or reloaded
using the init script in order to reread its configuration. A running daemon
will also reread the configuration file on receiving SIGHUP (see SIGNALS below).
.PP
Each line in the file consists of
.IP "configuration_option = value"
.PP
Long lines can be split by preceding the newlines with '\\'. Whitespace is
ignored. Lines beginning with '#' are comments and are ignored. If multiple
assignments of the same option occur, only the last one will take effect. For
binary options, 0 means off or disabled, any other integer means on or
enabled. Options which can accept lists may use either ';' or ',' to separate the
individual list members.
.PP
The options available in the config file (and their default settings) are:
.SS Universal Options 
.TP
.B cache_dir [/var/cache/pkg\-cacher]
The directory where pkg\-cacher will store local copies of all packages
requested. This can grow to many hundreds of MB, so make sure it is on a
partition with plenty of room. NOTE: the cache directory needs to contain some
subdirectories for correct storage management.  If you try to create a custom
directory, please use the script /usr/share/pkg\-cacher/install.pl or use the
initially created cache directory as example.
.TP
.B admin_email [root@localhost]
The email address of the administrator is displayed in the info page and traffic
reports.
.TP 
.B offline_mode [ 0 ]
Avoid any outgoing connection, return files available in the cache and just
return errors if they are missing.
.TP
.B path_map
A mapping scheme to rewrite URLs, which converts the first part of the URL after
the pkg\-cacher server name to a remote mirror. For example, if
you set
.IP "" 9
path_map = debian ftp.debian.org/debian
.IP "" 7
retrieving 
.IP "" 9
http://pkg\-cacher.server/debian/dists/stable/Release 
.IP "" 7
will actually fetch
.IP "" 9
http://ftp.debian.org/debian/dists/stable/Release 
.TP  7
.B generate_reports [1]
Whether to generate traffic reports daily. Traffic reports can be accessed by
pointing a browser to
.IP
http://pkg\-cacher.server/report/ [daemon mode] or
.IP
http://pkg\-cacher.server[:port]/pkg\-cacher/report/ [CGI mode].
.TP
.B clean_cache [1]
Whether to flush obsolete versions of packages from your cache daily. You can
check what will be done by running
.IP "" 9
.B /usr/share/pkg\-cacher-cleaner.pl \-s 
.IP "" 7
which will just show what would be done to the contents of the cache. A package
version is not obsolete if any of the distributions (stable, testing, etc) or
architectures you use reference it.  It should be safe to leave this on.
.TP
.B logdir [/var/log/pkg\-cacher]
Directory to use for the access and error log files and traffic report. The
access log records all successful package requests using a timestamp, whether
the request was fulfilled from cache, the IP address of the requesting computer,
the size of the package transferred, and the name of the package. The error log
records major faults, and is also used for debug messages if the debug directive
is set to 1. Debugging is toggled by sending SIGUSR1 (see SIGNALS below).
.TP
.B expire_hours [0]
How many hours Package and Release files are cached before they are assumed to
be too old and must be re-fetched. Setting 0 means that the validity of these
files is checked on each access by comparing time stamps in HTTP headers on the
server with those stored locally.
.TP
.B http_proxy []
Pkg\-cacher can pass all its requests to an external http proxy like
Squid, which could be very useful if you are using an ISP that blocks
port 80 and requires all web traffic to go through its proxy. The
format is 'hostname:port'.
.TP
.B use_proxy [0]
Use of an external proxy can be turned on or off with this option.
.TP
.B http_proxy_auth []
External http proxy sometimes need authentication to get full access. The
format is 'username:password', eg: 'proxyuser:proxypass'.
.TP
.B use_proxy_auth [0]
Use of external proxy authentication can be turned on or off with this option.
.TP
.B interface []
Specify a particular interface to use for the upstream connection. Can be an
interface name, IP address or host name. If unset, the default route is used.
.TP
.B limit [0]
Rate limiting sets the maximum rate in bytes per second used for fetching files
from the upstream mirrors. Syntax is fully defined in wget(1).  Use 'k' or 'm'
to use kilobits or megabits per second: e.g. 'limit=25k'.  Use 0 or a negative
value for no rate limiting.
.TP
.B user [pkg-cacher]
The effective user id to change to after allocating the ports. 
.TP
.B group [pkg-cacher]
The effective group id to change to.
.TP
.B debug [0]
Whether debug mode is enabled. Off by default. When turned on (non-nil), lots of
extra debug information will be written to the error log. This can make the
error log become quite big, so only use it when trying to debug
problems. Additional information from the libcurl backend can be obtained by
increasing this parameter. The correspondence between this setting and
curl_infotype is:-
.RS
.IP 1
CURLINFO_TEXT
.IP 2
CURLINFO_HEADER_IN
.IP 3
CURLINFO_HEADER_OUT
.IP 4
CURLINFO_DATA_IN
.IP 5
CURLINFO_DATA_OUT
.IP 6
CURLINFO_SSL_DATA_IN
.IP 7
CURLINFO_SSL_DATA_OUT
.TP
See CURLOPT_DEBUGFUNCTION in curl_easy_setopt(3) for further information.
.SS Stand-alone Daemon\-mode Options
.TP
.B daemon_port [80]
The TCP port to bind to.
.TP
.B daemon_addr [unset]
The daemon can be resticted to listen only on particular local IP
address(es). Single item or list of IPs. Use with care.
.TP
.B allowed_hosts [*]
If your pkg\-cacher server is directly connected to the Internet and you are
worried about unauthorised fetching of packages through it, you can specify a
range of IP addresses that are allowed to use it. Localhost (127.0.0.1) is
always allowed, other addresses must be matched by allowed_hosts and not by
denied_hosts to be permitted to use the cache.  Note that by default pkg\-cacher
will allow requests from any client, so set a range here if you want to restrict
access. This can be a single item, list, IP address with netmask or IP range See
the default configuration file for further details and examples.
.TP
.B denied_hosts
The opposite of allowed_hosts setting, excludes hosts from the list of allowed
hosts. Not used in inetd daemon mode.
.TP
.B allowed_hosts_6
Like allowed_hosts for IPv6 clients.
.TP
.B denied_hosts_6
Like denied_hosts for IPv6 clients.
.SH CLIENT CONFIGURATION
.PP
There are two different ways of configuring clients to use pkg\-cacher's
cache. Ensure that you do not use a mixture of both methods. Changing both
proxy settings and base URLs can create some confusion.
.TP
.B Access cache like a mirror
To use the cache in this way, edit /etc/pkg/sources.list on each client and
prepend the address of the pkg\-cacher server to each deb/src line. 
.IP
For example, if you have:
.IP "" 9	
deb http://ftp.debian.org stable main
.IP "" 7 
change it to read either
.IP "" 9
deb http://pkg\-cacher.server[:port]/ftp.debian.org stable main [server in daemon mode]
.IP "" 7
or	
.IP "" 9
deb http://pkg\-cacher.server[:port]/pkg\-cacher/ftp.debian.org stable main [server in CGI mode]
.TP 
.PP
.SH FAQ
.B Q: Can I just copy some .debs into the cache dir and have it work (precaching)?
.PP
A: No.
.PP
.B Q: Does the daily generation of reports or cleaning the cache depend
.B on whether pkg\-cacher is running continuously as a daemon?
.PP
A: No, the regular maintenance jobs are independent of a running server. They
are executed by cron and use only static data like logs and cached index files
and package directory listing.  However, pkg\-cacher should be configured
correctly because cleanup runs it directly (in inetd mode) to refresh the
Packages/Sources files.
.PP
.B Q: Are host names permissible?  What if a host is in
.B both lists (a literal reading of the current description is that the
.B host is denied)?
.PP
A: No, you must supply IP addresses. 
.PP
Unlike with some other software like Apache, the access control is slightly
different because there is no configurable checking order. Instead, a client
host is checked using both filters, allowed_hosts and denied_hosts. Following
combinations are possible: allowed_hosts=* and denied_hosts is empty, then every
host is allowed; allowed_hosts=<ip data> and denied_hosts=empty, then only
defined hosts are permitted; allowed_hosts=* and denied_hosts=<ip data>, then
every host is accepted except of those matched by denied_hosts;
allowed_hosts=<ip data> and denied_hosts=<ip data>, then only the clients from
allowed_hosts are accepted except of those matched by
denied_hosts. allowed_hosts=<empty> blocks everything. If allowed_hosts is
omitted, * is assumed.  denied_hosts must not have an "*" value, use empty
allowed_hosts setting if you want that.
.PP
.B Q: generate_reports: how does being able to view the reports depend on
.B the web server you are running?  Are they only available if pkg\-cacher
is running on port 80?
.PP
The report is generated using a script (started by a cron job, see above) and
is stored as $logdir/report.html. You can access it using the "/report" path in
the access URL. If pkg\-cacher is running in CGI mode, then the
URL for the browser looks like 
.B http://pkg\-cacher.server[:port]/pkg-cacher/report/.
.SH LIMITATIONS
Pkg\-cacher currently only handles forwarding to HTTP sources. Support for
other access methods (ftp, rsync) is not currently planned.
.SH SIGNALS
Pkg\-cacher handles the following signals:
.TP
.B HUP
Causes the configuration file to be re\-read.
.TP
.B USR1
Toggles printing of debug output to /var/log/pkg\-cacher/error.log
.SH FILES
.TP
.B /etc/pkg\-cacher/pkg\-cacher.conf
main configuration file
.TP
.B /var/log/pkg\-cacher
log directory, rotated by logrotate if available
.TP
.B /var/log/pkg\-cacher/report.html
report page, generated by the helper script
.SH AUTHOR
Pkg\-cacher was originally written by Nick Andrews <nick@zeta.org.au>.  This
manual page was originally written by Jonathan Oxer <jon@debian.org>, for the
Debian GNU/Linux system (but may be used by others). It was maintained by Eduard
Bloch <blade@debian.org>, and it is now maintained by Robert Nelson 
<robertn@the-nelsons.org>.

